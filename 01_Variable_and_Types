#Julia First Step : 01 Variable and Type

var = 123  # 변수와 값은 등호(=)를 이용해 묶어(bound)진다
foo = 4354; favorite_digimon = "Dukemon"; α = "Alpha"
# 변수의 이름은 알파벳, 유니코드, 하이픈(_) 등의 조합을 통해 만들어진다
# Latex 기호는 백슬래시(\)와 기호의 이름, 그리고 Tab을 통해 입력한다

print("Hello World!\n"); println("Hello World Again!")
# 출력은 print()나 println()을 이용해 수행한다
# print(), println()함수의 인자로 변수나 값을 전달하여 출력할 수 있다
# 개행 문자 \n을 통해 줄바꿈을 명령할 수 있다

print(typeof(foo), "\n"); print(typeof(favorite_digimon), "\n")
# typeof 함수를 통해 변숭,ㅣ type을 알 수 있다

foo = 12; bar = 32; print(foo+bar, "\n")
# 표현식은 식을 계산하고 그 값을 반환한다

far = 1
far::Int64
print(typeof(far), "\n")
# 타입 애노테이션으로 변수의 타입을 고정할 수 있다

xar = 1
xar = Bool(xar)
print(xar, "\n")
# Type(var)으로 변수의 타입을 바꿀 수 있다

i = 33
print(typeof(i), "\n")
# 정수형 리터럴의 타입은 시스템 아키텍쳐에 따라 결정된다

i = 2^44
print(typeof(i), "\n")
#- 시스템 아키텍쳐가 32bit여도 리터럴이 그 범위를-#
#-넘어가면 타입은 Int64 이상으로 고정된다-#

print(typemax(Int64)+1 == typemin(Int64), "\n")
# Overflow

flo = 4.31
floo = 5.1e-3
print(typeof(flo), "\n")
print(typeof(floo), "\n")
# 부동소수점 리터럴은 지수 표기법과 소수점을 이용하여 나타낼 수 있다

setrounding(Float64, RoundNearest) do
  print(flo+floo)
end
# 반올림
